For creating a directory: mkdir
For creating a username: git config --global user.name 'Arvand Eftekhar' 
For creating a user email: git config --global user.email arvand.eftekhar@gmail.com 
For adding vscode as a default editor: git config --global core.editor 'core --wait' and git config --global -e and git config --global core.autocrlf true
For changing directory and creating repo: cd FileName and git init
For checking the folders: ls
For creating a file and write something in it: echo text > or >> FileName
For seeing the status and save the changing and the files: git status and git add . or git add FileName
For permanent storing in repo: commit -m 'Git comments'
# The point of commiting is record checkpoints as we go
For seeing the content of the file which we wrote init: cat FileName'
deleting a file: rm FileName'
seeing the file in the project: ls-files'
For renaming or moving a file: mv FileName NewFileName
For ognoring a file: echo FileName > .gitignore
For opening ignored file: code gitignore
For removing a file from directory which commited: git rm --cached -r FileName
For short status: git status -s
# green m means modified and red means modified and not added and green A maens added and red question mark means not added
For seeing staged and unstaged changes: git diff and git diff --staged
For seeing the commits: git log or git log --oneline #space is next page and q is exit
For seeing the commits content: git show fqq97...
For undo the add operation/unstaging: git restore --staged FileName
For undo the local changes: git clean -fd
For restoring the file/restor from deleting: git restore --source=HEAD~1 FileName
for adding files  to the github with git: git remote add origin and git repo link, then git push -u origin BranchName(main)
# For adding the updated file again to the git for the second ore more time: git push
# For download from the github: git clone LinkOfRepo
# For seeing the changes and difrences befor and after for the specific file: git diff FileName
For creating a new branch and swith to it: git branch Name and git checkout NameOfBranch
For seeing the branch and log: git log --all --graph
For merging,combining two branches: git merge TheOtheOneName
